/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.template.visao;

import com.template.model.Aluno;
import com.template.persistencia.OrdenadoPorCursoNome;
import com.template.persistencia.OrdenadoPorEnfaseCursoNome;
import com.template.persistencia.OrdenadoPorEnfaseNome;
import com.template.persistencia.OrdenadoPorNome;
import com.template.persistencia.OrdenadoPorSituacaoNome;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tiago
 */
public class TelaTabela extends javax.swing.JFrame {

    /**
     * Creates new form TelaTabela
     */
    public TelaTabela() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboxOrdenação = new javax.swing.JComboBox<>();
        jButtonLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAluno = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboxOrdenação.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Curso | Nome", "Situação | Nome", "Ênfase | Nome", "Enfase | Curso | Nome" }));
        jComboxOrdenação.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboxOrdenaçãoActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jTableAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Curso", "Situação", "Ênfase"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableAluno);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboxOrdenação, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboxOrdenação, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLimpar))
                .addGap(103, 103, 103)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void imprimirNaGrid(ArrayList<Aluno> dados){
        try{
         DefaultTableModel model =  (DefaultTableModel) jTableAluno.getModel();
        model.setNumRows(0);
            int pos = 0;
            while(pos < dados.size()){
                String[] linha = new String[4];
                Aluno obj = dados.get(pos);
                linha[0]= obj.getNome();
                linha[1]= obj.getCurso();
                linha[2]= obj.getSituacao();
                linha[3]= obj.getEnfase();
                model.addRow(linha);
                pos++;
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }
    private void jComboxOrdenaçãoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboxOrdenaçãoActionPerformed
          if(jComboxOrdenação.getSelectedIndex() == 0){
              try{
            String nome = "./src/main/java/com/db/alunos/RelatorioDasEnfases.csv";
            OrdenadoPorNome objeto = new OrdenadoPorNome(nome);
            imprimirNaGrid(objeto.listagemDeAlunosNome());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
          }
           if(jComboxOrdenação.getSelectedIndex() == 1){
              try{
            String nome = "./src/main/java/com/db/alunos/RelatorioDasEnfases.csv";
            OrdenadoPorCursoNome objeto = new OrdenadoPorCursoNome(nome);
            imprimirNaGrid(objeto.listagemDeAlunosNome());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
           }
               if(jComboxOrdenação.getSelectedIndex() == 2){
              try{
            String nome = "./src/main/java/com/db/alunos/RelatorioDasEnfases.csv";
             OrdenadoPorSituacaoNome objeto = new OrdenadoPorSituacaoNome(nome);
            imprimirNaGrid(objeto.listagemDeAlunosNome());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
          }
           if(jComboxOrdenação.getSelectedIndex() ==3){
              try{
            String nome = "./src/main/java/com/db/alunos/RelatorioDasEnfases.csv";
            OrdenadoPorEnfaseNome objeto = new OrdenadoPorEnfaseNome(nome);
            imprimirNaGrid(objeto.listagemDeAlunosNome());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
          
          }
           if(jComboxOrdenação.getSelectedIndex() ==4){
              try{
            String nome = "./src/main/java/com/db/alunos/RelatorioDasEnfases.csv";
            OrdenadoPorEnfaseCursoNome objeto = new OrdenadoPorEnfaseCursoNome(nome);
            imprimirNaGrid(objeto.listagemDeAlunosNome());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(rootPane, erro);
        }
          
          }
    }//GEN-LAST:event_jComboxOrdenaçãoActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
       DefaultTableModel model =  (DefaultTableModel) jTableAluno.getModel();
        model.setNumRows(0);   
    }//GEN-LAST:event_jButtonLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaTabela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JComboBox<String> jComboxOrdenação;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAluno;
    // End of variables declaration//GEN-END:variables
}
